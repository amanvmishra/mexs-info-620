<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   borderVisible="true">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:CurrencyFormatter id="amount" precision="2"  
							  rounding="none" 
							  decimalSeparatorTo="." 
							  thousandsSeparatorTo="," 
							  useThousandsSeparator="true" 
							  useNegativeSign="true"
							  currencySymbol=""/> 
	</fx:Declarations>
	
	<fx:Metadata>
		[Name]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mexs.Currency;
			import mexs.Patron;
			import mexs.Transaction;
			
			import mx.collections.ArrayCollection;
			
			import org.granite.tide.Component;
			import org.granite.tide.events.TideResultEvent;
			
			[In("mexs.patronController")]
			public var patronController:Component;
			
			[In("mexs.currencyController")]
			public var currencyController:Component;
			
			[In("mexs.transactionController")]
			public var transactionController:Component;
			
			[Bindable] [In]
			public var conversionInfo:String;
			
			[Bindable] [In]
			public var totalAmount:Number;
			
			[Bindable] [In]
			public var totalCommission:Number;
			
			[Bindable] [In]
			public var totalMinusCommission:Number;
			
			[Bindable] [In]
			public var transactions:ArrayCollection;
			
			private var sourceCurrency:Currency = new Currency();
			private var targetCurrency:Currency = new Currency();
			private var transaction:Transaction = new Transaction();
			private var patron:Patron = new Patron();
			
			var toFixed:Function = function(number:Number, factor:Number) { 
				return (Math.round(number *= factor)/factor); 
			} 

			
			private function submit_handler():void
			{
				transactionController.createTransaction({patron:patron, sourceCurrency:sourceCurrency, targetCurrency:targetCurrency, 
					transaction:transaction}, transactionComplete);	
			}
			
			private function transactionComplete(event:TideResultEvent):void
			{
				this.parentApplication.currentState = 'successInfo';
				this.parentApplication.successComponent.displayTransaction(transactions);
				resetData();
			}
			
			private function back_handler():void
			{
				this.parentApplication.currentState = 'enterInfo';
				resetData();
			}
			
			private function cancel_handler():void
			{
				this.parentApplication.currentState = 'enterInfo';
				this.parentApplication.enterComponent.clearFields();
				resetData();
			}
			
			private function resetData():void
			{
				firstName.text = "First Name: ";
				lastName.text = "Last Name: ";
				passport.text = "Passport Number: ";
				country.text = "Country: ";
				srcAmount.text = "   Amount: ";
				srcCurrency.text = "   Currency Code: ";
				tgtCurrency.text = "  Currency Code: ";
				conversion.text = "Conversion Rate: ";
				commission.text = "Commission Rate: ";
				totalNoCommission.text = "Total Target Amount Without Commission: ";
				total.text = "Total Target Amount: ";
			}
			
			public function loadEnteredData(first:String, last:String, passportNum:String, patronCountry:String,
													srcAmt:String, srcCode:String, tgtCode:String):void
			{
				firstName.text += first;
				lastName.text += last;
				passport.text += passportNum;
				country.text += patronCountry;
				srcAmount.text += amount.format(srcAmt);
				srcCurrency.text += srcCode;
				tgtCurrency.text += tgtCode;
				
				patron.firstName = first;
				patron.lastName = last;
				patron.passportNumber = Number(passportNum);
				patron.country = patronCountry;

				sourceCurrency.currencySymbol = srcCode;
				targetCurrency.currencySymbol = tgtCode;
				
				transaction.dateOfTransaction = new Date();
				transaction.sourceAmount = Number(srcAmt);
				
				currencyController.getConversionInfo({source:srcCode, target:tgtCode}, conversionResult);
				transactionController.calcTotalAmount({srcAmt:srcAmt, srcCode:srcCode, tgtCode:tgtCode}, totalAmountResult);
			}
			
			private function conversionResult(event:TideResultEvent):void
			{
				conversion.text += conversionInfo;
			}
			
			private function totalAmountResult(event:TideResultEvent):void
			{
				totalNoCommission.text += amount.format(toFixed(totalAmount,100)) + " " + targetCurrency.currencySymbol;
				
				transaction.totalTargetAmount = totalAmount;
				
				transactionController.calcCommission({totalAmount:totalAmount}, commissionResult);
			}
			
			private function commissionResult(event:TideResultEvent):void
			{
				commission.text += "$" + amount.format(toFixed(totalCommission, 100))
				
				transaction.commissionRate = totalCommission;
				
				transactionController.calcTotalMinusCommission({totalCommission:totalCommission, totalAmount:totalAmount, 
					targetCode:targetCurrency.currencySymbol}, totalMinusCommissionResult);
			}
			
			private function totalMinusCommissionResult(event:TideResultEvent):void
			{
				transaction.totalTransactionAmount = totalMinusCommission;
				total.text += amount.format(toFixed(totalMinusCommission, 100)) + " " + targetCurrency.currencySymbol;
			}
		]]>
	</fx:Script>
	
	<s:Label text="Verify Information" fontWeight="bold" fontSize="18" paddingLeft="10" paddingTop="10"/>
	<s:VGroup width="100%" height="85%" bottom="10" left="10" right="10">
		<s:BorderContainer width="100%" height="100%" borderVisible="false">
			<s:VGroup left="20">
			<s:BorderContainer  cornerRadius="2" borderWeight="2" borderColor="0x000000" dropShadowVisible="true"
								backgroundColor="0x1874CD">
				<s:Label text="Patron Information" fontSize="14" color="0XFFFFFF" verticalCenter="0" horizontalCenter="0"/>
			</s:BorderContainer>
			<s:Label id="firstName" text="First Name: " fontSize="12" verticalCenter="0" horizontalCenter="0" paddingTop="5"/>
			<s:Label id="lastName" text="Last Name: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
			<s:Label id="passport" text="Passport Number: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
			<s:Label id="country" text="Country: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
			</s:VGroup>
			<s:VGroup right="20">
				<s:BorderContainer  cornerRadius="2" borderWeight="2" borderColor="0x000000" dropShadowVisible="true"
									backgroundColor="0x1874CD">
					<s:Label text="Currency Information" fontSize="14" color="0XFFFFFF" verticalCenter="0" horizontalCenter="0"/>
				</s:BorderContainer>
				<s:Label text="Source Currency " fontSize="12" verticalCenter="0" horizontalCenter="0" paddingTop="5"/>
				<s:Label id="srcAmount" text="   Amount: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
				<s:Label id="srcCurrency" text="   Currency Code: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
				<s:Label text="Target Currency " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
				<s:Label id="tgtCurrency" text="   Currency Code: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
			</s:VGroup>
		</s:BorderContainer>
		<s:BorderContainer width="100%" height="100%" borderVisible="false">
			<s:VGroup horizontalCenter="0">
				<s:BorderContainer  cornerRadius="2" borderWeight="2" borderColor="0x000000" dropShadowVisible="true"
									backgroundColor="0x1874CD">
					<s:Label text="Total Transaction Information" fontSize="14" color="0XFFFFFF" verticalCenter="0" horizontalCenter="0"/>
				</s:BorderContainer>
				<s:Label id="conversion" text="Conversion Rate: " fontSize="12" verticalCenter="0" horizontalCenter="0" paddingTop="5"/>
				<s:Label id="commission" text="Commission Amount: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
				<s:Label id="totalNoCommission" text="Total Target Amount Without Commission: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
				<s:Label id="total" text="Total Target Amount: " fontSize="12" verticalCenter="0" horizontalCenter="0"/>
			</s:VGroup>
		</s:BorderContainer>
	</s:VGroup>
	<s:HGroup width="100%" height="10%" bottom="10" verticalAlign="middle" horizontalAlign="right" paddingRight="5">
		<s:Button id="submitButton" label="Submit" click="submit_handler()"/>
		<s:Button id="backButton" label="Back" click="back_handler()"/>
		<s:Button id="cancelButton" label="Cancel" click="cancel_handler()"/>
	</s:HGroup>
</s:BorderContainer>
